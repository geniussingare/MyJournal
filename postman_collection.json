{
	"info": {
		"_postman_id": "1a5d2e3f-6b7c-8d9e-0f1a-2b3c4d5e6f7g",
		"name": "Journal App API",
		"description": "API endpoints for Journal Application with Spring Security",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Authentication related endpoints",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user in the system"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Authenticate a user and create a session"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"user"
							]
						},
						"description": "Get information about the currently authenticated user"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "End the user's session and logout"
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"description": "Admin endpoints (requires ROLE_ADMIN)",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"users"
							]
						},
						"description": "Get a list of all users (requires admin role)"
					},
					"response": []
				},
				{
					"name": "Add Role to User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"MODERATOR\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/admin/users/testuser/roles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"users",
								"testuser",
								"roles"
							]
						},
						"description": "Add a role to a user (requires admin role)"
					},
					"response": []
				},
				{
					"name": "Remove Role from User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/users/testuser/roles/MODERATOR",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"users",
								"testuser",
								"roles",
								"MODERATOR"
							]
						},
						"description": "Remove a role from a user (requires admin role)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/users/testuser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"users",
								"testuser"
							]
						},
						"description": "Delete a user from the system (requires admin role)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Journals",
			"description": "Journal entry endpoints (requires authentication)",
			"item": [
				{
					"name": "Get All Journals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/journals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"journals"
							]
						},
						"description": "Get all journal entries for the current user"
					},
					"response": []
				},
				{
					"name": "Create Journal Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Journal Entry\",\n    \"content\": \"This is the content of my first journal entry.\",\n    \"tags\": [\"personal\", \"thoughts\"]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/journals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"journals"
							]
						},
						"description": "Create a new journal entry"
					},
					"response": []
				},
				{
					"name": "Get Journal by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/journals/{journal_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"journals",
								"{journal_id}"
							]
						},
						"description": "Get a specific journal entry by ID"
					},
					"response": []
				},
				{
					"name": "Update Journal Entry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Journal Entry\",\n    \"content\": \"This is the updated content of my journal entry.\",\n    \"tags\": [\"personal\", \"thoughts\", \"updated\"]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/journals/{journal_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"journals",
								"{journal_id}"
							]
						},
						"description": "Update an existing journal entry"
					},
					"response": []
				},
				{
					"name": "Delete Journal Entry",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/journals/{journal_id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"journals",
								"{journal_id}"
							]
						},
						"description": "Delete a journal entry"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin123",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
} 